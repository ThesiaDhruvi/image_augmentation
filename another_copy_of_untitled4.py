# -*- coding: utf-8 -*-
"""Another copy of Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H-pOV_aRo7PMYTk2PEGbjAte0GAt8CPW
"""

import imgaug.augmenters as iaa
import cv2
import glob
import os
import numpy as np


# Image loading
images = []
images_path = glob.glob("/content/drive/MyDrive/cnc_dataset/labels/*")

for img_path in images_path:
    print(img_path)
    img = cv2.imread(img_path)
    images.append(img)
# print(images)
# Image augmentation
augmentation = iaa.Sequential([
    iaa.SomeOf((0, None), [
        iaa.Affine(scale={"x": (0.8, 1.2), "y": (0.8, 1.2)}),  # Scale images
        iaa.Affine(translate_percent={"x": (-0.2, 0.2), "y": (-0.2, 0.2)}),  # Translate images
        iaa.Affine(rotate=(-45, 45)),  # Rotate images
        iaa.Affine(shear=(-16, 16)),  # Shear images
        iaa.Fliplr(0.5),  # Horizontal flips
        iaa.Flipud(0.5),  # Vertical flips
        iaa.Crop(percent=(0, 0.1)),  # Random crops
        iaa.GaussianBlur((0, 3.0)),  # Gaussian blur
        iaa.AdditiveGaussianNoise(loc=0, scale=(0.0, 0.05 * 255), per_channel=0.5),  # Gaussian noise
        iaa.Dropout((0.01, 0.1), per_channel=0.5),  # Random dropout
        iaa.Add((-10, 10), per_channel=0.5),  # Add values to pixels
        iaa.Multiply((0.5, 1.5), per_channel=0.5),  # Change brightness
       # iaa.ContrastNormalization((0.5, 2.0), per_channel=0.5),  # Change contrast
        iaa.Grayscale(alpha=(0.0, 1.0))  # Convert images to grayscale
        #iaa.ElasticTransformation(alpha=(0.5, 3.5), sigma=0.25),  # Elastic transformation
        # Additional augmentations can be added here
    ]),
])

augmented_images = augmentation(images=images)
# augmented_images = images


# Show and save images
save_path = "/content/drive/MyDrive/cnc_dataset/123/"
os.makedirs(save_path, exist_ok=True)
print("start")
for i, img in enumerate(augmented_images):
    print("dhurvi")
   # cv2.imshow("Augmented Image", img)
    cv2.waitKey(100)  # Add a delay to see the image before moving to the next one

    # Save the augmented image
    cv2.imwrite(os.path.join(save_path, f'augmented_{i}.jpg'), img)

# Close the OpenCV window
cv2.destroyAllWindows()